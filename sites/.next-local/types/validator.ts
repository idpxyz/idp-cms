// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate beijing/page.tsx
{
  const handler = {} as typeof import("beijing/page.js")
  handler satisfies AppPageConfig<"/beijing">
}

// Validate config-demo/page.tsx
{
  const handler = {} as typeof import("config-demo/page.js")
  handler satisfies AppPageConfig<"/config-demo">
}

// Validate hangzhou/page.tsx
{
  const handler = {} as typeof import("hangzhou/page.js")
  handler satisfies AppPageConfig<"/hangzhou">
}

// Validate portal/analytics/page.tsx
{
  const handler = {} as typeof import("portal/analytics/page.js")
  handler satisfies AppPageConfig<"/portal/analytics">
}

// Validate portal/article/[slug]/page.tsx
{
  const handler = {} as typeof import("portal/article/[slug]/page.js")
  handler satisfies AppPageConfig<"/portal/article/[slug]">
}

// Validate portal/category/[slug]/page.tsx
{
  const handler = {} as typeof import("portal/category/[slug]/page.js")
  handler satisfies AppPageConfig<"/portal/category/[slug]">
}

// Validate portal/check-login-status/page.tsx
{
  const handler = {} as typeof import("portal/check-login-status/page.js")
  handler satisfies AppPageConfig<"/portal/check-login-status">
}

// Validate portal/comments/page.tsx
{
  const handler = {} as typeof import("portal/comments/page.js")
  handler satisfies AppPageConfig<"/portal/comments">
}

// Validate portal/demo/ai-governance/page.tsx
{
  const handler = {} as typeof import("portal/demo/ai-governance/page.js")
  handler satisfies AppPageConfig<"/portal/demo/ai-governance">
}

// Validate portal/demo/grid-layout/page.tsx
{
  const handler = {} as typeof import("portal/demo/grid-layout/page.js")
  handler satisfies AppPageConfig<"/portal/demo/grid-layout">
}

// Validate portal/demo/hero-banner/page.tsx
{
  const handler = {} as typeof import("portal/demo/hero-banner/page.js")
  handler satisfies AppPageConfig<"/portal/demo/hero-banner">
}

// Validate portal/demo/hero-carousel/page.tsx
{
  const handler = {} as typeof import("portal/demo/hero-carousel/page.js")
  handler satisfies AppPageConfig<"/portal/demo/hero-carousel">
}

// Validate portal/demo/hybrid-design/page.tsx
{
  const handler = {} as typeof import("portal/demo/hybrid-design/page.js")
  handler satisfies AppPageConfig<"/portal/demo/hybrid-design">
}

// Validate portal/demo/masonry-layout/page.tsx
{
  const handler = {} as typeof import("portal/demo/masonry-layout/page.js")
  handler satisfies AppPageConfig<"/portal/demo/masonry-layout">
}

// Validate portal/demo/page.tsx
{
  const handler = {} as typeof import("portal/demo/page.js")
  handler satisfies AppPageConfig<"/portal/demo">
}

// Validate portal/demo/visual-first/page.tsx
{
  const handler = {} as typeof import("portal/demo/visual-first/page.js")
  handler satisfies AppPageConfig<"/portal/demo/visual-first">
}

// Validate portal/favorites/page.tsx
{
  const handler = {} as typeof import("portal/favorites/page.js")
  handler satisfies AppPageConfig<"/portal/favorites">
}

// Validate portal/history/page.tsx
{
  const handler = {} as typeof import("portal/history/page.js")
  handler satisfies AppPageConfig<"/portal/history">
}

// Validate portal/monitor/page.tsx
{
  const handler = {} as typeof import("portal/monitor/page.js")
  handler satisfies AppPageConfig<"/portal/monitor">
}

// Validate portal/news/page.tsx
{
  const handler = {} as typeof import("portal/news/page.js")
  handler satisfies AppPageConfig<"/portal/news">
}

// Validate portal/page.tsx
{
  const handler = {} as typeof import("portal/page.js")
  handler satisfies AppPageConfig<"/portal">
}

// Validate portal/profile/page.tsx
{
  const handler = {} as typeof import("portal/profile/page.js")
  handler satisfies AppPageConfig<"/portal/profile">
}

// Validate portal/search/enhanced/page.tsx
{
  const handler = {} as typeof import("portal/search/enhanced/page.js")
  handler satisfies AppPageConfig<"/portal/search/enhanced">
}

// Validate portal/search/page.tsx
{
  const handler = {} as typeof import("portal/search/page.js")
  handler satisfies AppPageConfig<"/portal/search">
}

// Validate portal/settings/page.tsx
{
  const handler = {} as typeof import("portal/settings/page.js")
  handler satisfies AppPageConfig<"/portal/settings">
}

// Validate portal/tags/[slug]/page.tsx
{
  const handler = {} as typeof import("portal/tags/[slug]/page.js")
  handler satisfies AppPageConfig<"/portal/tags/[slug]">
}

// Validate portal/tags/page.tsx
{
  const handler = {} as typeof import("portal/tags/page.js")
  handler satisfies AppPageConfig<"/portal/tags">
}

// Validate portal/test-behavior-tracking/page.tsx
{
  const handler = {} as typeof import("portal/test-behavior-tracking/page.js")
  handler satisfies AppPageConfig<"/portal/test-behavior-tracking">
}

// Validate portal/test-comment-integration/page.tsx
{
  const handler = {} as typeof import("portal/test-comment-integration/page.js")
  handler satisfies AppPageConfig<"/portal/test-comment-integration">
}

// Validate portal/test-comment-like/page.tsx
{
  const handler = {} as typeof import("portal/test-comment-like/page.js")
  handler satisfies AppPageConfig<"/portal/test-comment-like">
}

// Validate portal/test-headlines/page.tsx
{
  const handler = {} as typeof import("portal/test-headlines/page.js")
  handler satisfies AppPageConfig<"/portal/test-headlines">
}

// Validate portal/test-login/page.tsx
{
  const handler = {} as typeof import("portal/test-login/page.js")
  handler satisfies AppPageConfig<"/portal/test-login">
}

// Validate portal/theme-demo/page.tsx
{
  const handler = {} as typeof import("portal/theme-demo/page.js")
  handler satisfies AppPageConfig<"/portal/theme-demo">
}

// Validate portal/theme-test/page.tsx
{
  const handler = {} as typeof import("portal/theme-test/page.js")
  handler satisfies AppPageConfig<"/portal/theme-test">
}

// Validate portal/topic/[slug]/page.tsx
{
  const handler = {} as typeof import("portal/topic/[slug]/page.js")
  handler satisfies AppPageConfig<"/portal/topic/[slug]">
}

// Validate shanghai/page.tsx
{
  const handler = {} as typeof import("shanghai/page.js")
  handler satisfies AppPageConfig<"/shanghai">
}

// Validate shanghai/theme-demo/page.tsx
{
  const handler = {} as typeof import("shanghai/theme-demo/page.js")
  handler satisfies AppPageConfig<"/shanghai/theme-demo">
}

// Validate shenzhen/page.tsx
{
  const handler = {} as typeof import("shenzhen/page.js")
  handler satisfies AppPageConfig<"/shenzhen">
}

// Validate api/analytics/route.ts
{
  const handler = {} as typeof import("api/analytics/route.js")
  handler satisfies RouteHandlerConfig<"/api/analytics">
}

// Validate api/analytics/stream/route.ts
{
  const handler = {} as typeof import("api/analytics/stream/route.js")
  handler satisfies RouteHandlerConfig<"/api/analytics/stream">
}

// Validate api/articles/[slug]/recommendations/route.ts
{
  const handler = {} as typeof import("api/articles/[slug]/recommendations/route.js")
  handler satisfies RouteHandlerConfig<"/api/articles/[slug]/recommendations">
}

// Validate api/articles/[slug]/route.ts
{
  const handler = {} as typeof import("api/articles/[slug]/route.js")
  handler satisfies RouteHandlerConfig<"/api/articles/[slug]">
}

// Validate api/articles/route.ts
{
  const handler = {} as typeof import("api/articles/route.js")
  handler satisfies RouteHandlerConfig<"/api/articles">
}

// Validate api/backend/[...path]/route.ts
{
  const handler = {} as typeof import("api/backend/[...path]/route.js")
  handler satisfies RouteHandlerConfig<"/api/backend/[...path]">
}

// Validate api/basic/sse/route.ts
{
  const handler = {} as typeof import("api/basic/sse/route.js")
  handler satisfies RouteHandlerConfig<"/api/basic/sse">
}

// Validate api/categories/route.ts
{
  const handler = {} as typeof import("api/categories/route.js")
  handler satisfies RouteHandlerConfig<"/api/categories">
}

// Validate api/channels/personalized/route.ts
{
  const handler = {} as typeof import("api/channels/personalized/route.js")
  handler satisfies RouteHandlerConfig<"/api/channels/personalized">
}

// Validate api/channels/route.ts
{
  const handler = {} as typeof import("api/channels/route.js")
  handler satisfies RouteHandlerConfig<"/api/channels">
}

// Validate api/feed/route.ts
{
  const handler = {} as typeof import("api/feed/route.js")
  handler satisfies RouteHandlerConfig<"/api/feed">
}

// Validate api/frontend/layout/route.ts
{
  const handler = {} as typeof import("api/frontend/layout/route.js")
  handler satisfies RouteHandlerConfig<"/api/frontend/layout">
}

// Validate api/frontend/modules/route.ts
{
  const handler = {} as typeof import("api/frontend/modules/route.js")
  handler satisfies RouteHandlerConfig<"/api/frontend/modules">
}

// Validate api/frontend/theme/route.ts
{
  const handler = {} as typeof import("api/frontend/theme/route.js")
  handler satisfies RouteHandlerConfig<"/api/frontend/theme">
}

// Validate api/headlines/route.ts
{
  const handler = {} as typeof import("api/headlines/route.js")
  handler satisfies RouteHandlerConfig<"/api/headlines">
}

// Validate api/health/route.ts
{
  const handler = {} as typeof import("api/health/route.js")
  handler satisfies RouteHandlerConfig<"/api/health">
}

// Validate api/hot/route.ts
{
  const handler = {} as typeof import("api/hot/route.js")
  handler satisfies RouteHandlerConfig<"/api/hot">
}

// Validate api/internal/preview/route.ts
{
  const handler = {} as typeof import("api/internal/preview/route.js")
  handler satisfies RouteHandlerConfig<"/api/internal/preview">
}

// Validate api/media-proxy/[...path]/route.ts
{
  const handler = {} as typeof import("api/media-proxy/[...path]/route.js")
  handler satisfies RouteHandlerConfig<"/api/media-proxy/[...path]">
}

// Validate api/mock/analytics/stream/route.ts
{
  const handler = {} as typeof import("api/mock/analytics/stream/route.js")
  handler satisfies RouteHandlerConfig<"/api/mock/analytics/stream">
}

// Validate api/monitoring/dashboard/route.ts
{
  const handler = {} as typeof import("api/monitoring/dashboard/route.js")
  handler satisfies RouteHandlerConfig<"/api/monitoring/dashboard">
}

// Validate api/monitoring/health/route.ts
{
  const handler = {} as typeof import("api/monitoring/health/route.js")
  handler satisfies RouteHandlerConfig<"/api/monitoring/health">
}

// Validate api/news/route.ts
{
  const handler = {} as typeof import("api/news/route.js")
  handler satisfies RouteHandlerConfig<"/api/news">
}

// Validate api/proxy/articles/route.ts
{
  const handler = {} as typeof import("api/proxy/articles/route.js")
  handler satisfies RouteHandlerConfig<"/api/proxy/articles">
}

// Validate api/proxy/cache/route.ts
{
  const handler = {} as typeof import("api/proxy/cache/route.js")
  handler satisfies RouteHandlerConfig<"/api/proxy/cache">
}

// Validate api/proxy/site-settings/route.ts
{
  const handler = {} as typeof import("api/proxy/site-settings/route.js")
  handler satisfies RouteHandlerConfig<"/api/proxy/site-settings">
}

// Validate api/ready/route.ts
{
  const handler = {} as typeof import("api/ready/route.js")
  handler satisfies RouteHandlerConfig<"/api/ready">
}

// Validate api/revalidate/route.ts
{
  const handler = {} as typeof import("api/revalidate/route.js")
  handler satisfies RouteHandlerConfig<"/api/revalidate">
}

// Validate api/robots/route.ts
{
  const handler = {} as typeof import("api/robots/route.js")
  handler satisfies RouteHandlerConfig<"/api/robots">
}

// Validate api/search/route.ts
{
  const handler = {} as typeof import("api/search/route.js")
  handler satisfies RouteHandlerConfig<"/api/search">
}

// Validate api/search/suggest/route.ts
{
  const handler = {} as typeof import("api/search/suggest/route.js")
  handler satisfies RouteHandlerConfig<"/api/search/suggest">
}

// Validate api/search/trending/route.ts
{
  const handler = {} as typeof import("api/search/trending/route.js")
  handler satisfies RouteHandlerConfig<"/api/search/trending">
}

// Validate api/site-settings/route.ts
{
  const handler = {} as typeof import("api/site-settings/route.js")
  handler satisfies RouteHandlerConfig<"/api/site-settings">
}

// Validate api/startup/route.ts
{
  const handler = {} as typeof import("api/startup/route.js")
  handler satisfies RouteHandlerConfig<"/api/startup">
}

// Validate api/tags/[slug]/route.ts
{
  const handler = {} as typeof import("api/tags/[slug]/route.js")
  handler satisfies RouteHandlerConfig<"/api/tags/[slug]">
}

// Validate api/tags/top/route.ts
{
  const handler = {} as typeof import("api/tags/top/route.js")
  handler satisfies RouteHandlerConfig<"/api/tags/top">
}

// Validate api/test/headlines/route.ts
{
  const handler = {} as typeof import("api/test/headlines/route.js")
  handler satisfies RouteHandlerConfig<"/api/test/headlines">
}

// Validate api/topics/[slug]/route.ts
{
  const handler = {} as typeof import("api/topics/[slug]/route.js")
  handler satisfies RouteHandlerConfig<"/api/topics/[slug]">
}

// Validate api/topics/db/[slug]/articles/route.ts
{
  const handler = {} as typeof import("api/topics/db/[slug]/articles/route.js")
  handler satisfies RouteHandlerConfig<"/api/topics/db/[slug]/articles">
}

// Validate api/topics/db/[slug]/route.ts
{
  const handler = {} as typeof import("api/topics/db/[slug]/route.js")
  handler satisfies RouteHandlerConfig<"/api/topics/db/[slug]">
}

// Validate api/topics/db/route.ts
{
  const handler = {} as typeof import("api/topics/db/route.js")
  handler satisfies RouteHandlerConfig<"/api/topics/db">
}

// Validate api/topics/route.ts
{
  const handler = {} as typeof import("api/topics/route.js")
  handler satisfies RouteHandlerConfig<"/api/topics">
}

// Validate api/track/route.ts
{
  const handler = {} as typeof import("api/track/route.js")
  handler satisfies RouteHandlerConfig<"/api/track">
}

// Validate portal/robots.txt/route.ts
{
  const handler = {} as typeof import("portal/robots.txt/route.js")
  handler satisfies RouteHandlerConfig<"/portal/robots.txt">
}





// Validate beijing/layout.tsx
{
  const handler = {} as typeof import("beijing/layout.js")
  handler satisfies LayoutConfig<"/beijing">
}

// Validate hangzhou/layout.tsx
{
  const handler = {} as typeof import("hangzhou/layout.js")
  handler satisfies LayoutConfig<"/hangzhou">
}

// Validate layout.tsx
{
  const handler = {} as typeof import("layout.js")
  handler satisfies LayoutConfig<"/">
}

// Validate portal/layout.tsx
{
  const handler = {} as typeof import("portal/layout.js")
  handler satisfies LayoutConfig<"/portal">
}

// Validate shanghai/layout.tsx
{
  const handler = {} as typeof import("shanghai/layout.js")
  handler satisfies LayoutConfig<"/shanghai">
}

// Validate shenzhen/layout.tsx
{
  const handler = {} as typeof import("shenzhen/layout.js")
  handler satisfies LayoutConfig<"/shenzhen">
}

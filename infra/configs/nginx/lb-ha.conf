# Nginx 负载均衡配置 - 高可用模式
# 用于双服务器负载均衡和故障转移

# 后端应用服务器组 (Django/Wagtail API)
upstream backend_api {
    least_conn;  # 最少连接数负载均衡算法
    
    server SERVER1_IP:8000 weight=2 max_fails=3 fail_timeout=30s;
    server SERVER2_IP:8000 weight=1 max_fails=3 fail_timeout=30s backup;
    
    keepalive 32;  # 保持连接池
}

# 前端应用服务器组 (Next.js)
upstream frontend_app {
    ip_hash;  # 基于客户端IP的会话保持
    
    server SERVER1_IP:3000 max_fails=3 fail_timeout=30s;
    server SERVER2_IP:3000 max_fails=3 fail_timeout=30s;
    
    keepalive 64;
}

# Admin 后台服务器组
upstream admin_backend {
    server SERVER1_IP:8000 max_fails=3 fail_timeout=30s;
    server SERVER2_IP:8000 max_fails=3 fail_timeout=30s backup;
}

# HTTP 服务器配置
server {
    listen 80;
    listen [::]:80;
    server_name YOUR_DOMAIN.COM www.YOUR_DOMAIN.COM;
    
    # 强制跳转 HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS 主服务器配置
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name YOUR_DOMAIN.COM www.YOUR_DOMAIN.COM;
    
    # SSL 配置
    ssl_certificate /etc/letsencrypt/live/YOUR_DOMAIN.COM/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN.COM/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # 安全头
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # 日志配置
    access_log /var/log/nginx/idp-cms-access.log combined;
    error_log /var/log/nginx/idp-cms-error.log warn;
    
    # 客户端配置
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    
    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # 前端应用（Next.js）
    location / {
        proxy_pass http://frontend_app;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # WebSocket 支持
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓存配置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # API 后端（Django）
    location /api/ {
        proxy_pass http://backend_api;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }
    
    # CMS API（Django Wagtail）
    location /cms/ {
        proxy_pass http://backend_api;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }
    
    # Admin 后台
    location /admin/ {
        proxy_pass http://admin_backend;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Admin 需要更长的超时时间
        proxy_connect_timeout 120s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
    
    # 静态文件（Django static）
    location /static/ {
        proxy_pass http://backend_api;
        proxy_cache_valid 200 1d;
        expires 1d;
        add_header Cache-Control "public, immutable";
    }
    
    # 媒体文件（通过 MinIO）
    location /media/ {
        proxy_pass http://backend_api;
        proxy_cache_valid 200 1h;
        expires 1h;
    }
    
    # 健康检查端点（不记录日志）
    location /health/ {
        proxy_pass http://backend_api;
        access_log off;
    }
    
    # Next.js 健康检查
    location /api/health {
        proxy_pass http://frontend_app;
        access_log off;
    }
}

# 负载均衡状态页（可选，仅内网访问）
server {
    listen 8080;
    server_name localhost;
    
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 192.168.0.0/16;
        allow 172.16.0.0/12;
        deny all;
    }
    
    location /upstream_status {
        # 需要安装 nginx-module-vts 模块
        # vhost_traffic_status_display;
        # vhost_traffic_status_display_format html;
        access_log off;
        allow 127.0.0.1;
        allow 192.168.0.0/16;
        allow 172.16.0.0/12;
        deny all;
    }
}


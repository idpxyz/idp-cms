# Generated by Django 5.2.5 on 2025-08-12 08:23

import django.db.models.deletion
import modelcluster.fields
import taggit.managers
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('wagtailcore', '0096_redirect'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticlePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('introduction', models.TextField(blank=True)),
                ('body', wagtail.fields.RichTextField()),
                ('channel_slug', models.SlugField(default='recommend')),
                ('topic_slug', models.SlugField(blank=True, default='')),
                ('author_name', models.CharField(blank=True, default='', max_length=64)),
                ('has_video', models.BooleanField(default=False)),
                ('region', models.CharField(default='global', max_length=32)),
                ('language', models.CharField(default='zh', max_length=8)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ArticlePageTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='news.articlepage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='articlepage',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='news.ArticlePageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
